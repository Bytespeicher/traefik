
[http.middlewares]
  [http.middlewares.auth.basicAuth]
    users = [
      "XUSERX:XHASHX"
    ]
# Cacheing Plugin usage after registration in pilot
#  [http.middlewares.my-cache.plugin.cache]
#    path = "/var/lib/traefik/cache"
#    maxExpiry = 86400

   [http.middlewares.http_to_https.redirectScheme]
    scheme = "https"
    permanent = true

[http.services.http_to_https]
  [[http.services.http_to_https.loadBalancer.servers]]
    url = "http://google.com/"
    
[http.services.traefikdash]
  [[http.services.traefikdash.loadBalancer.servers]]
    port = 8080
    
[http.services.web]
  [[http.services.monitor.loadBalancer.servers]]
    url = "http://10.10.10.3/"


# Loadbalancing example
#[http.services.mapstatic]
#  [[http.services.mapstatic.loadBalancer.servers]]
#    url = "https://a.tile.openstreetmap.de/"
#  [[http.services.mapstatic.loadBalancer.servers]]
#    url = "https://b.tile.openstreetmap.de/"
#  [[http.services.mapstatic.loadBalancer.servers]]
#    url = "https://c.tile.openstreetmap.de/"
#  [[http.services.mapstatic.loadBalancer.servers]]
#    url = "https://d.tile.openstreetmap.de/"

[http.routers]
  [http.routers.http_to_https]
    entryPoints = [ "http" ]
    rule = "PathPrefix(`/`)"
    middlewares = [ "http_to_https" ]
    service = "http_to_https"
    priority = 1

  [http.routers.traefikdash]
    entryPoints = [ "https"]
    middlewares = [ "auth" ]
    rule="Host (`traefik.bytespeicher.org`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
    service="api@internal"
    [http.routers.traefikdash.tls]
    certResolver = "letsencrypt"


 [http.routers.web]
    entryPoints = [ "https"]
    rule="Host(`bytespeicher.org`)"
    service="web"
    priority = 100
    [http.routers.web.tls]
    certResolver = "letsencrypt"
    
#  [http.routers.mapstatic]
#    entryPoints = [ "https"]
#    rule="Host(`map.erfurt.freifunk.net`) && PathPrefix(`/`)"
#    service="mapstatic"
#    middlewares= [ "my-cache" ]
#    priority = 100
#    [http.routers.fapstatic.tls]
#    certResolver = "letsencrypt"

 [http.routers.mail]
    entryPoints = [ "https"]
    rule="Host(`mail.bytespeicher.org`) || Host(`smtp.bytespeicher.org`) || Host(`imap.bytespeicher.org`)"
    service="http_to_https"
    priority = 10
 [http.routers.mail.tls]
    certResolver = "letsencrypt"

#[tcp.routers]
#  [tcp.routers.puppet]
#   entryPoints = [ "puppet" ]
#    rule="HostSNI(`puppet.bytespeicher.org`) || HostSNI(`puppet.kids-digital.de`) "
#    service="puppet"
#  [tcp.routers.puppet.tls]
 #   passthrough = true

#[tcp.services.puppet]
#  [[tcp.services.puppet.loadBalancer.servers]]
#    address = "10.10.10.10:8140"
